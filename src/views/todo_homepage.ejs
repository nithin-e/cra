<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">

  <title>To-Do List</title>
  <style>
    /* Reset some default styles */
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Roboto', Arial, sans-serif;
      background-color: #f0f4f8;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .container {
      background-color: white;
      padding: 2rem;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 500px;
    }

    h1 {
      text-align: center;
      margin-bottom: 1.5rem;
      color: #1e293b;
    }

    .input-container {
      display: flex;
      margin-bottom: 1.5rem;
    }

    input[type="text"] {
      flex: 1;
      padding: 0.75rem 1rem;
      border: 1px solid #e2e8f0;
      border-radius: 6px;
      font-size: 1rem;
      background-color: #f8fafc;
    }

    input[type="text"]:focus {
      outline: none;
      border-color: #0ea5e9;
      box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.2);
    }

    button {
      background-color: #0ea5e9;
      color: white;
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 6px;
      font-size: 1rem;
      cursor: pointer;
      margin-left: 0.5rem;
      transition: background-color 0.2s ease;
    }

    button:hover {
      background-color: #0369a1;
    }

    .todo-list {
      list-style-type: none;
    }

    .todo-item {
      display: flex;
      align-items: center;
      padding: 1rem 0;
      border-bottom: 1px solid #e2e8f0;
    }

    .todo-item:last-child {
      border-bottom: none;
    }

    .todo-item input[type="checkbox"] {
      margin-right: 1rem;
      transform: scale(1.2);
    }

    .todo-item label {
      flex: 1;
      font-size: 1.1rem;
      color: #1e293b;
    }

    .todo-item button {
      background-color: transparent;
      color: #dc2626;
      font-size: 1.1rem;
      padding: 0.5rem 0.75rem;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      transition: background-color 0.2s ease;
    }

    .todo-item button:hover {
      background-color: #f8fafc;
    }

    .completed {
      text-decoration: line-through;
      color: #94a3b8;
    }
  </style>

<style>
  .edit-container {
      margin-top: 5px;
  }
  
  .edit-input {
      padding: 5px;
      margin-right: 2px;
  }
  
  .todo-item {
      display: flex;
      align-items: center;
      gap: 5px;
      padding: 5px;
      border-bottom: 1px solid #eee;
  }
  
  .editing .task-text,
  .editing .edit-btn,
  .editing .delete-btn {
      display: none;
  }
  
  .editing .edit-container {
      display: block !important;
  }
  </style>
</head>
<body>
  <div class="container">
    <h1>To-Do List</h1>
    <div class="input-container">
      <input type="text" placeholder="Enter a new task" id="todo-input">
      <button id="add-button">Add</button>
    </div>
    <ul class="todo-list" id="todo-list">
      <% allTask.forEach(task => { %>
        <li class="todo-item">
          <input type="checkbox" <%= task.completed ? 'checked' : '' %>>
          <label><%= task.description %></label>
          <button id="delete_task" onclick="deleteFunction('<%= task._id %>')">Delete</button>
          <button class="edit-btn" onclick="toggleEdit(this)" style="color: green;">Edit</button>
          <div class="edit-container" style="display: none;">
            <input type="text" class="edit-input" value="<%= task.description %>">
            <button class="save-btn" onclick="saveEdit('<%= task._id %>', this)" style="font-size: 15px;">Save</button>
            <button class="cancel-btn" onclick="cancelEdit(this)" style="font-size: 15px;">Cancel</button>
          </div>
        </li>
      <% }) %>
    </ul>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.js"></script>

<script>
  function toggleEdit(editBtn) {
    const listItem = editBtn.closest('.todo-item');
    listItem.classList.add('editing');
}


function cancelEdit(cancelBtn) {
    const listItem = cancelBtn.closest('.todo-item');
    listItem.classList.remove('editing');
}

function saveEdit(id, button) {
  const edited = button.closest('.edit-container').querySelector('.edit-input').value;
  console.log('...........', edited);

  fetch(`/edit-tak/${id}`,{

    method:'POST',
    headers: {
    'Content-Type': 'application/json'
    },
    body: JSON.stringify({ edited: edited })

  })
  .then(response => response.json())
  .then(result => {
          if (result.success) {
               console.log('settaannu...');
                setTimeout(() => {
                 location.reload()
               }, 1000);
          }else{
           console.log('working in else');
        Toastify({
            text: result.message,
            duration: 3000,
            close: true,
            gravity: "top",
            position: "center",
            backgroundColor: '#0ea5e9',
            color: 'white',
            className: "toastify-custom",
        }).showToast();
           
          }


      })

  
}


</script>


  <script>
    function deleteFunction(taskid) {
      console.log('.....id kitando.......',taskid);
      
      fetch(`/delete_Task/${taskid}`,{
        method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
      })
      .then(response => response.json())
      .then(result => {
          if (result.success) {
            console.log('settaannu...');
            Toastify({
                    text: result.message,
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: "center",
                    backgroundColor: '#0ea5e9',
                    color:'white',
                    className: "toastify-custom",
                }).showToast();

                setTimeout(() => {
                 location.reload()
               }, 1000);
          }else{

          }


      })
      
    }
  </script>

  <script>
    const button = document.getElementById("add-button");
    button.addEventListener('click', () => {
    
        let Task = document.getElementById('todo-input').value;
        console.log('Button was clicked! Event created.', Task);

        
        fetch(`/Add-Task`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ task: Task })
        })
        .then(response => response.json())
        .then(result => {
            if (result.success) {
              console.log('....settallee......');
              
                Toastify({
                    text: result.message,
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: "center",
                    backgroundColor: '#0ea5e9',
                    color:'white',
                    className: "toastify-custom",
                }).showToast();

               setTimeout(() => {
                 location.reload()
               }, 2000);
            } else {
                console.error('Failed to delete item:', result.message);
                Toastify({
                   text: result.message,
                    duration: 3000,
                     close: true,
                       gravity: "top",
                       position: "center",
                       backgroundColor: '#0ea5e9',
                              color: 'red',  
                            className: "toastify-custom",
                           }).showToast();

                setTimeout(() => {
                 location.reload()
               }, 2000);
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });
</script>

</body>
</html>